name: lint-test-package-release Python application

on:
    push:
        branches: [ "master" ]
        tags:
            - '*'

permissions:
    contents: write

jobs:
    build:
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ windows-latest, ubuntu-latest ]
                python-version: [ "3.8" ]

        steps:
            -   uses: actions/checkout@v4
            -   name: Set up Python
                uses: actions/setup-python@v3
                with:
                    python-version: ${{ matrix.python-version }}

            -   name: Install Linux-specific dependencies
                if: runner.os == 'Linux'
                run: |
                    sudo apt-get update
                    sudo apt-get install -y scrot python3-tk python3-dev binutils

            -   name: Install dependencies
                run: |
                    python -m pip install --upgrade pip
                    pip install -e .
                    pip install -e .[development]

            -   name: Lint with flake8
                run: |
                    # stop the build if there are Python syntax errors or undefined names
                    flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
                    # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
                    flake8 . --count --exit-zero --max-complexity=10 --max-line-length=140 --statistics

            -   name: Test with pytest and collect coverage
                uses: coactions/setup-xvfb@v1
                with:
                    run: |
                        pytest --cov=./ --cov-report=xml
                if: ${{ hashFiles('tests/') != '' }}

            -   name: Upload coverage to Codecov
                uses: codecov/codecov-action@v4
                with:
                    token: ${{ secrets.CODECOV_TOKEN }}
                    fail_ci_if_error: false
                    files: ./coverage.xml
                    flags: unittests
                    name: codecov-umbrella
                if: ${{ hashFiles('tests/') != '' }}

            -   name: Run Pyinstaller to create release
                run: |
                    pyinstaller -y --windowed --add-data translations:translations run.py

            -   name: Zip the artifact (Windows)
                if: runner.os == 'Windows'
                uses: vimtor/action-zip@v1.2
                with:
                    files: dist/run
                    dest: eye-tracker-app-windows.zip

            -   name: Zip the artifact (Linux)
                if: runner.os == 'Linux'
                run: |
                    zip -r eye-tracker-app-linux.zip dist/run

            -   name: Upload the artifact (Windows)
                if: runner.os == 'Windows'
                uses: actions/upload-artifact@v4
                with:
                    name: ${{ github.sha }}-windows
                    path: eye-tracker-app-windows.zip
                    if-no-files-found: error
                    overwrite: true

            -   name: Upload the artifact (Linux)
                if: runner.os == 'Linux'
                uses: actions/upload-artifact@v4
                with:
                    name: ${{ github.sha }}-linux
                    path: eye-tracker-app-linux.zip
                    if-no-files-found: error
                    overwrite: true

            -   name: Release
                uses: softprops/action-gh-release@v2
                if: startsWith(github.ref, 'refs/tags/')
                with:
                    files: |
                        eye-tracker-app-windows.zip
                        eye-tracker-app-linux.zip
